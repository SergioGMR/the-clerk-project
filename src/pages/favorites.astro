---
import Layout from "@layouts/Layout.astro";
import {
    getChannelLogo,
    getChannels,
    getChannelUrl,
} from "@utils/channelScraper";
import { SignedIn } from "@clerk/astro/components";
import { getUserFavorites } from "@utils/favoritesUtils";

// Get all channels
const channels = await getChannels();

// Get current user and their favorites
const user = await Astro.locals.currentUser();
const userFavorites = user ? await getUserFavorites(user.id) : [];
// Filter channels to get only favorites
const favoriteChannels = channels.filter((channel) =>
    userFavorites.some((favorite) => favorite === channel.id),
);

// Check if we have favorites
const hasFavorites = favoriteChannels.length > 0;

// Prepare data for client-side with favorites pre-loaded
const clientData = {
    channels,
    userFavorites,
};
const clientDataJSON = JSON.stringify(clientData);
---

<Layout title="Your Favorites | Acestream Directory">
    <div class="py-8 px-4 sm:px-6 lg:px-8">
        <h1 class="text-3xl font-bold text-white mb-6">
            Your Favorite Channels
        </h1>
        <SignedIn>
            <div id="favorites-container">
                <!-- Empty state -->
                {
                    !hasFavorites && (
                        <div id="empty-favorites" class="py-12 text-center">
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                class="mx-auto h-12 w-12 text-zinc-500"
                                fill="none"
                                viewBox="0 0 24 24"
                                stroke="currentColor"
                                aria-hidden="true"
                            >
                                <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
                                />
                            </svg>
                            <h3 class="mt-2 text-lg font-medium text-white">
                                No favorites yet
                            </h3>
                            <p class="mt-1 text-zinc-500">
                                Start by adding channels to your favorites list
                                from the channels directory.
                            </p>
                            <div class="mt-6">
                                <a
                                    href="/"
                                    class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                                >
                                    Browse Channels
                                </a>
                            </div>
                        </div>
                    )
                }

                <!-- Favorites grid -->
                {
                    hasFavorites && (
                        <div
                            id="favorites-grid"
                            class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4"
                        >
                            {favoriteChannels.map((channel) => (
                                <div
                                    data-channel-id={channel.id}
                                    class="favorite-card bg-zinc-900 border border-zinc-800 rounded-lg overflow-hidden hover:border-red-500 transition-all"
                                >
                                    <div class="p-4">
                                        <div class="flex items-center justify-between">
                                            <div class="flex items-center space-x-3">
                                                <div
                                                    class="w-12 h-12 rounded-md flex items-center justify-center text-white font-bold text-xl"
                                                    style={`background-color: ${getChannelLogo(channel.name, channel.url?.startsWith("acestream://") ? "acestream" : "url").backgroundColor};`}
                                                >
                                                    {
                                                        getChannelLogo(
                                                            channel.name,
                                                            channel.url?.startsWith(
                                                                "acestream://",
                                                            )
                                                                ? "acestream"
                                                                : "url",
                                                        ).initials
                                                    }
                                                </div>
                                                <div>
                                                    <h3 class="text-white font-medium">
                                                        {channel.name}
                                                    </h3>
                                                    {channel.quality && (
                                                        <span class="inline-block px-2 py-0.5 text-xs rounded bg-green-900/50 text-green-300 border border-green-800/50">
                                                            {channel.quality}
                                                        </span>
                                                    )}
                                                </div>
                                            </div>
                                            <button class="remove-favorite text-zinc-400 hover:text-red-500 p-1">
                                                <svg
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    class="h-5 w-5"
                                                    viewBox="0 0 20 20"
                                                    fill="currentColor"
                                                >
                                                    <path
                                                        fill-rule="evenodd"
                                                        d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                                        clip-rule="evenodd"
                                                    />
                                                </svg>
                                            </button>
                                        </div>

                                        <div class="mt-4 flex flex-wrap gap-2">
                                            {channel.tags &&
                                                channel.tags.length > 0 &&
                                                channel.tags.map((tag) => (
                                                    <span class="inline-block px-2 py-0.5 rounded text-xs bg-zinc-800/50 text-zinc-400 border border-zinc-700/50">
                                                        {tag}
                                                    </span>
                                                ))}
                                        </div>

                                        <div class="mt-4">
                                            <a
                                                href={getChannelUrl(channel)}
                                                target={
                                                    channel.type === "acestream"
                                                        ? "_self"
                                                        : "_blank"
                                                }
                                                rel={
                                                    channel.type === "acestream"
                                                        ? ""
                                                        : "noopener noreferrer"
                                                }
                                                class={`w-full inline-flex justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md 
                             ${channel.type === "acestream" ? "bg-red-600 hover:bg-red-700 text-white" : "bg-blue-600 hover:bg-blue-700 text-white"}`}
                                            >
                                                {channel.type === "acestream"
                                                    ? "Open in Acestream"
                                                    : "Open External Link"}
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            ))}
                        </div>
                    )
                }

                <!-- Error state (hidden by default) -->
                <div id="error-favorites" class="hidden py-12 text-center">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="mx-auto h-12 w-12 text-red-500"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                        aria-hidden="true"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
                        ></path>
                    </svg>
                    <h3 class="mt-2 text-lg font-medium text-white">
                        Error updating favorites
                    </h3>
                    <p class="mt-1 text-zinc-500">
                        There was a problem updating your favorite channels.
                        Please refresh and try again.
                    </p>
                    <div class="mt-6">
                        <button
                            id="retry-button"
                            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                        >
                            Refresh
                        </button>
                    </div>
                </div>
            </div>

            <!-- Channel data for client-side JavaScript -->
            <script
                id="channel-data"
                type="application/json"
                set:html={clientDataJSON}
            />
        </SignedIn>
    </div>
</Layout>

<script>
    import {
        removeFavorite,
        generateChannelColor,
    } from "../scripts/favoritesManager.js";
    import { setupAcestreamHandlers } from "../scripts/channelFilters.js";

    // Get client data
    const clientData = JSON.parse(
        document.getElementById("channel-data")?.textContent || "{}",
    );

    // Get DOM elements
    const favoritesGrid = document.getElementById("favorites-grid");
    const emptyFavorites = document.getElementById("empty-favorites");
    const errorElement = document.getElementById("error-favorites");
    const retryButton = document.getElementById("retry-button");

    // Setup handlers for acestream links
    setupAcestreamHandlers();

    // Setup event handlers for remove buttons
    const setupRemoveButtons = () => {
        const removeButtons = document.querySelectorAll(".remove-favorite");
        removeButtons.forEach((btn) => {
            btn.addEventListener("click", async (e) => {
                e.preventDefault();
                e.stopPropagation();

                const card = btn.closest("[data-channel-id]");
                const channelId = card?.getAttribute("data-channel-id");

                if (!channelId) return;

                try {
                    const success = await removeFavorite(channelId);
                    if (success) {
                        // Remove card from UI
                        card?.remove();

                        // Check if we have any favorites left
                        if (
                            favoritesGrid &&
                            favoritesGrid.children.length === 0
                        ) {
                            // Show empty state
                            favoritesGrid.classList.add("hidden");
                            emptyFavorites?.classList.remove("hidden");
                        }
                    } else {
                        // Show error message
                        throw new Error("Failed to remove favorite");
                    }
                } catch (error) {
                    console.error("Error removing favorite:", error);
                    errorElement?.classList.remove("hidden");
                }
            });
        });
    };

    // Setup refresh button
    if (retryButton) {
        retryButton.addEventListener("click", () => {
            window.location.reload();
        });
    }

    // Initialize
    document.addEventListener("DOMContentLoaded", () => {
        setupRemoveButtons();
    });
</script>
